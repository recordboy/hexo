{"pages":[{"title":"about","text":"","link":"/about/index.html"}],"posts":[{"title":"자바스크립트 소개","text":"자바스크립트는 프로토타입 기반의 스크립트 언어이다. 주로 웹 브라우저 내에서 주로 사용되며 Node.js 와 같은 런타입 환경과 같이 서버 사이드 프로그래밍에도 사용되고 있다. 창시자는 넷스케이프사의 브렌던 아이크이다. 자바스크립트의 역사초창기 자바스크립트는 웹 페이지 제작에 있어서 보조적인 기능을 수행하기 위한 용도로써 사용되었다. 클라이언트인 웹 브라우저에서 서버로부터 받은 HTML과 CSS, 데이터로 렌더링을 해주는 수준이였다. 이 시절에 자바스크립트는 그다지 중요한 역할을 담당하지 못했다. 하지만 소수의 프로그래머들에 의해 여러 가지 연구가 이루어졌고, 웹 아키텍쳐에도 크고 작은 변화가 일어났다. 특히 과거에 서버에서 담당했던 역할들이 상당 부분 웹 브라우저로 이동하였고, 자바스크립트는 이 변화의 중점에 서게 된다. 게다가 jQuery 의 등장으로 보다 쉽게 DOM을 핸들링하게 되면서 많은 발전을 이루었다.현재는 브라우저 기반의 자바스크립트 라이브러리 뿐만 아니라 Node.js와 같은 서버 기반의 자바스크립트 환경에서 동작할 수 있는 각종 라이브러리까지 쏟아져 나오고 있다.이제는 자바스크립트만으로 웹 서버와 클라이언트인 웹 페이지 개발을 동시에 할 수 있는 수준까지 왔다고 볼 수 있다. 자바스크립트 언어의 특징자바스크립트는 클래스를 지원하지 않지만 객체지향 프로그래밍이 가능하다.여기서 객체 지향 프로그래밍(OOP)에 대해 잠깐 짚어본다. 객체 지향 프로그래밍(OOP)줄여서 OOP 라고 부르겠다. OOP는 컴퓨터 프로그래밍 패러다임중 하나이며, 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러개의 독립된 단위, 즉 “객체” 들의 모임으로 파악하고자 하는 것이다. 각각의 객체들은 메시지를 주고받고, 데이터를 처리할 수 있다. 객체지향 프로그래밍은 프로그램을 유연하고 변경이 용이하게 만들기 때문에 대규모 소프트웨어 개발에 많이 사용되고, 보수를 간편하게 하며 보다 직관적인 코드 분석을 가능하게 하는 장점을 가지고 있다. 객체지향의 반대로는 절차지향 프로그래밍(procedural Programming)이라는 패러다임이 있다. 절차지향 프로그래밍이란 순차적인 처리가 중요시되며, 프로그램 전체가 유기적으로 연결되도록 만드는 프로그래밍 기법이다. 대표적인 절차지향 언어에는 C언어가 있다. OOP의 특성으로는 추상화(Abstraction), 캡슐화(Encapsulation), 상속(Inheritance), 다형성(Polymorphism)이 있으며 이 개념은 추후에 알아보도록 하겠다.","link":"/2017/05/01/javascript-introduce/"},{"title":"변수","text":"프로그래밍에서 기본이 되는 데이터를 담는 공간이다. 어떠한 값을 저장하기 위한 공간이면서 변할수 있다는 뜻을 가지고 있다. 변수의 반대말로는 변하지 않는 상수가 있다. 선언 방법은 var 라는 키워드를 사용한다. 1var 변수이름 = 저장데이터; = 는 대입 연산자로서 우측에 있는 값을 왼쪽에 있는 변수에 담는 연산자다. 세미콜론(;)은 문장의 끝을 알린다. 오류를 방지하기 위해 문장이 끝나면 꼭 선언해 주도록 하자 참고로 함수 선언식에서는 마지막에 세미콜론을 붙이지 않는데 이건 하나의 관습이고, 코드 작성시 권장되는 방식이다. 그리고 자바스크립트에서는 세미콜론 사용을 강제하지는 않는다. 그 이유는 자바스크립트 인터프리터가 자동으로 세미콜론을 삽입시켜 주기 때문이다. 하지만 세미콜론을 꼭 선언해 주는 습관을 가지도록 해야한다. 신경을 안쓴다면 코드를 압축하거나 디버깅 할시에 심각한 오류를 가지게 될수 있기 때문이다. 변수는 크게 네가지로 나뉠수 있으며 종류는 전역변수(Global Variable) : 전역에서 사용되는 변수로서 어디서든 접근이 가능하다. 지역변수(Local Variable) : 특정 지역에서 사용되는 변수로서 보통 함수 내부에 만들어 지는 변수 매개변수(Parameter) : 함수 외부에서 데이터를 받아 올때 사용되는 변수 속성(Property) : 객체의 속성값으로 쓰이는 변수이다. 참고로 전역 객체는 window 객체이다. 전역변수를 선언한다면 자동으로 window 객체의 프로퍼티가 된다고 생각하면 된다. 아래 코드를 참고 123var obj = { name: \"foo\" // name = 속성(프로퍼티, 아니면 키), foo = 속성의 값(프로퍼티 값 아니면 키값)}; 인자(Arguments)와 매개변수(Parameter)에 대해 많이 헷갈려 했었는데, 인자는 함수를 호출할때 대입하는 값을 의미하고 매개변수는 함수 내에 있는 값을 의미한다고 볼 수 있다. 1234function func(foo){ return foo; // foo = 매개변수}func(\"value\"); // \"value\" = 인자 변수를 만들때는 주의사항이 네가지 있다. 변수명은 대소문자를 구분해야 한다. 변수명은 소문자로 시작하고, 관례상 카멜기법을 사용한다. 여기서 카멜기법이란 문자모양이 낙타와 비슷하다고 해서 지어졌다. 네이밍 기법은 3가지로 분류할수 있다. 카멜기법(myName) 스네이크 기법(my_name) 파스칼 기법(my-name) 한번 저장하고 변하지 않는 상수값은 모두 대문자로 작성한다. 자바 언어 같은 경우 상수 값을 만드는 방법이 지원되지만 자바스크립트는 없다. 그래서 관례상 대문자로 작성하는 것이다. 예가 몇가지 있는데 슬라이드 플러그인에서 사용자가 정의하는 변수나 그누보드의 config.php 에 나와있는 상수 선언 등이 있다. 키워드(예약어)를 사용하면 안된다.(예: var, function, break 등등 아주 많음) 예약어로 변수를 선언하면 브라우저에서 오류 메세지가 출력되므로 많은 예약어를 따로 외울 필요는 없다.","link":"/2017/05/02/javascript-variable/"}],"tags":[{"name":"javascript","slug":"javascript","link":"/tags/javascript/"}],"categories":[{"name":"javascript","slug":"javascript","link":"/categories/javascript/"}]}